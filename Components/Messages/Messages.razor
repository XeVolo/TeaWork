@page "/messages"
@using TeaWork.Data.Models
@using TeaWork.Logic.Dto
@using TeaWork.Logic.Services
@using TeaWork.Logic.Services.Interfaces
@inject NavigationManager NavigationManager
@inject IConversationService ConversationService
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<PageTitle>Messages</PageTitle>

<Sidebar Href="messages"
         IconName="IconName.Envelope"
         Title="@Localizer["Conversations"]"
         DataProvider="SidebarDataProvider"
         Class="conversation-sidebar"
         />

@code {
    public List<NavItem> navItems = new List<NavItem>();
    private List<Conversation> conversationsList = new List<Conversation>();

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        navItems = await GetNavItems();
        return await Task.FromResult(request.ApplyTo(navItems));
    }

    private async Task<List<NavItem>> GetNavItems()
    {
        conversationsList = await ConversationService.GetMyConversations();
        foreach (var conversation in conversationsList)
        {
            string name = await ConversationService.GetConversationName(conversation.Id);

            navItems.Add(new NavItem { Href = ($"messages/conversation?id={conversation.Id}"), IconName = IconName.Envelope, Text = name });
        }
        navItems.Add(new NavItem { Href = ($"messages/newconversation"), IconName = IconName.Plus, Text = "New Conversation" });
        return navItems;
    }
}
