@using Orientation = Radzen.Orientation;
@using ButtonType = Radzen.ButtonType;
@inject DialogService DialogService

<RadzenTemplateForm TItem="PrivateAppointment" Data="@model" Submit=@OnSubmit>
    <RadzenStack Gap="1rem">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="@Localizer["Name"]" Style="width: 6rem;" />
            <RadzenTextBox @bind-Value="@model.Text" Name="Text" Style="width: 12rem;" />
            <RadzenRequiredValidator Component="Text" Text="Title is required" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="@Localizer["Description"]" Style="width: 6rem;" />
            <RadzenTextBox @bind-Value="@model.Description" Name="Text" Style="width: 12rem;" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="@Localizer["Start"]" Style="width: 6rem;" />
            <RadzenDatePicker @bind-Value="@model.Start" Name="Start" ShowTime="true" Style="width: 12rem;" />
            <RadzenRequiredValidator Component="Start" Text="Start is required" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="@Localizer["End"]" Style="width: 6rem;" />
            <RadzenDatePicker Name="End" @bind-Value="@model.End" ShowTime="true" Style="width: 12rem;" />
            <RadzenRequiredValidator Component="End" Text="End is required" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End">
            <RadzenButton ButtonType="ButtonType.Submit" Text="@Localizer["Save"]" />
        </RadzenStack>
    </RadzenStack>
</RadzenTemplateForm>
@code {
    [Parameter]
    public PrivateAppointment Appointment { get; set; }

    PrivateAppointment model = new PrivateAppointment();

    protected override void OnParametersSet()
    {
        model = Appointment;
    }

    void OnSubmit(PrivateAppointment model)
    {
        DialogService.Close(model);
    }
}